// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/table/so_stakeRecord.proto

package table

import (
	fmt "fmt"
	prototype "github.com/coschain/contentos-go/prototype"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SoStakeRecord struct {
	Record               *prototype.StakeRecord  `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	StakeAmount          *prototype.Vest         `protobuf:"bytes,2,opt,name=stake_amount,json=stakeAmount,proto3" json:"stake_amount,omitempty"`
	LastStakeTime        *prototype.TimePointSec `protobuf:"bytes,3,opt,name=last_stake_time,json=lastStakeTime,proto3" json:"last_stake_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SoStakeRecord) Reset()         { *m = SoStakeRecord{} }
func (m *SoStakeRecord) String() string { return proto.CompactTextString(m) }
func (*SoStakeRecord) ProtoMessage()    {}
func (*SoStakeRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc8be678e9a63e, []int{0}
}

func (m *SoStakeRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoStakeRecord.Unmarshal(m, b)
}
func (m *SoStakeRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoStakeRecord.Marshal(b, m, deterministic)
}
func (m *SoStakeRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoStakeRecord.Merge(m, src)
}
func (m *SoStakeRecord) XXX_Size() int {
	return xxx_messageInfo_SoStakeRecord.Size(m)
}
func (m *SoStakeRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SoStakeRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SoStakeRecord proto.InternalMessageInfo

func (m *SoStakeRecord) GetRecord() *prototype.StakeRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *SoStakeRecord) GetStakeAmount() *prototype.Vest {
	if m != nil {
		return m.StakeAmount
	}
	return nil
}

func (m *SoStakeRecord) GetLastStakeTime() *prototype.TimePointSec {
	if m != nil {
		return m.LastStakeTime
	}
	return nil
}

type SoMemStakeRecordByRecord struct {
	Record               *prototype.StakeRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SoMemStakeRecordByRecord) Reset()         { *m = SoMemStakeRecordByRecord{} }
func (m *SoMemStakeRecordByRecord) String() string { return proto.CompactTextString(m) }
func (*SoMemStakeRecordByRecord) ProtoMessage()    {}
func (*SoMemStakeRecordByRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc8be678e9a63e, []int{1}
}

func (m *SoMemStakeRecordByRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoMemStakeRecordByRecord.Unmarshal(m, b)
}
func (m *SoMemStakeRecordByRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoMemStakeRecordByRecord.Marshal(b, m, deterministic)
}
func (m *SoMemStakeRecordByRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoMemStakeRecordByRecord.Merge(m, src)
}
func (m *SoMemStakeRecordByRecord) XXX_Size() int {
	return xxx_messageInfo_SoMemStakeRecordByRecord.Size(m)
}
func (m *SoMemStakeRecordByRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SoMemStakeRecordByRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SoMemStakeRecordByRecord proto.InternalMessageInfo

func (m *SoMemStakeRecordByRecord) GetRecord() *prototype.StakeRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type SoMemStakeRecordByStakeAmount struct {
	StakeAmount          *prototype.Vest `protobuf:"bytes,1,opt,name=stake_amount,json=stakeAmount,proto3" json:"stake_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SoMemStakeRecordByStakeAmount) Reset()         { *m = SoMemStakeRecordByStakeAmount{} }
func (m *SoMemStakeRecordByStakeAmount) String() string { return proto.CompactTextString(m) }
func (*SoMemStakeRecordByStakeAmount) ProtoMessage()    {}
func (*SoMemStakeRecordByStakeAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc8be678e9a63e, []int{2}
}

func (m *SoMemStakeRecordByStakeAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoMemStakeRecordByStakeAmount.Unmarshal(m, b)
}
func (m *SoMemStakeRecordByStakeAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoMemStakeRecordByStakeAmount.Marshal(b, m, deterministic)
}
func (m *SoMemStakeRecordByStakeAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoMemStakeRecordByStakeAmount.Merge(m, src)
}
func (m *SoMemStakeRecordByStakeAmount) XXX_Size() int {
	return xxx_messageInfo_SoMemStakeRecordByStakeAmount.Size(m)
}
func (m *SoMemStakeRecordByStakeAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_SoMemStakeRecordByStakeAmount.DiscardUnknown(m)
}

var xxx_messageInfo_SoMemStakeRecordByStakeAmount proto.InternalMessageInfo

func (m *SoMemStakeRecordByStakeAmount) GetStakeAmount() *prototype.Vest {
	if m != nil {
		return m.StakeAmount
	}
	return nil
}

type SoMemStakeRecordByLastStakeTime struct {
	LastStakeTime        *prototype.TimePointSec `protobuf:"bytes,1,opt,name=last_stake_time,json=lastStakeTime,proto3" json:"last_stake_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SoMemStakeRecordByLastStakeTime) Reset()         { *m = SoMemStakeRecordByLastStakeTime{} }
func (m *SoMemStakeRecordByLastStakeTime) String() string { return proto.CompactTextString(m) }
func (*SoMemStakeRecordByLastStakeTime) ProtoMessage()    {}
func (*SoMemStakeRecordByLastStakeTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc8be678e9a63e, []int{3}
}

func (m *SoMemStakeRecordByLastStakeTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoMemStakeRecordByLastStakeTime.Unmarshal(m, b)
}
func (m *SoMemStakeRecordByLastStakeTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoMemStakeRecordByLastStakeTime.Marshal(b, m, deterministic)
}
func (m *SoMemStakeRecordByLastStakeTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoMemStakeRecordByLastStakeTime.Merge(m, src)
}
func (m *SoMemStakeRecordByLastStakeTime) XXX_Size() int {
	return xxx_messageInfo_SoMemStakeRecordByLastStakeTime.Size(m)
}
func (m *SoMemStakeRecordByLastStakeTime) XXX_DiscardUnknown() {
	xxx_messageInfo_SoMemStakeRecordByLastStakeTime.DiscardUnknown(m)
}

var xxx_messageInfo_SoMemStakeRecordByLastStakeTime proto.InternalMessageInfo

func (m *SoMemStakeRecordByLastStakeTime) GetLastStakeTime() *prototype.TimePointSec {
	if m != nil {
		return m.LastStakeTime
	}
	return nil
}

type SoUniqueStakeRecordByRecord struct {
	Record               *prototype.StakeRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SoUniqueStakeRecordByRecord) Reset()         { *m = SoUniqueStakeRecordByRecord{} }
func (m *SoUniqueStakeRecordByRecord) String() string { return proto.CompactTextString(m) }
func (*SoUniqueStakeRecordByRecord) ProtoMessage()    {}
func (*SoUniqueStakeRecordByRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_08fc8be678e9a63e, []int{4}
}

func (m *SoUniqueStakeRecordByRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoUniqueStakeRecordByRecord.Unmarshal(m, b)
}
func (m *SoUniqueStakeRecordByRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoUniqueStakeRecordByRecord.Marshal(b, m, deterministic)
}
func (m *SoUniqueStakeRecordByRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoUniqueStakeRecordByRecord.Merge(m, src)
}
func (m *SoUniqueStakeRecordByRecord) XXX_Size() int {
	return xxx_messageInfo_SoUniqueStakeRecordByRecord.Size(m)
}
func (m *SoUniqueStakeRecordByRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SoUniqueStakeRecordByRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SoUniqueStakeRecordByRecord proto.InternalMessageInfo

func (m *SoUniqueStakeRecordByRecord) GetRecord() *prototype.StakeRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*SoStakeRecord)(nil), "table.so_stakeRecord")
	proto.RegisterType((*SoMemStakeRecordByRecord)(nil), "table.so_mem_stakeRecord_by_record")
	proto.RegisterType((*SoMemStakeRecordByStakeAmount)(nil), "table.so_mem_stakeRecord_by_stake_amount")
	proto.RegisterType((*SoMemStakeRecordByLastStakeTime)(nil), "table.so_mem_stakeRecord_by_last_stake_time")
	proto.RegisterType((*SoUniqueStakeRecordByRecord)(nil), "table.so_unique_stakeRecord_by_record")
}

func init() { proto.RegisterFile("app/table/so_stakeRecord.proto", fileDescriptor_08fc8be678e9a63e) }

var fileDescriptor_08fc8be678e9a63e = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0xa9, 0xe2, 0x2e, 0x32, 0x75, 0x50, 0x04, 0xeb, 0x10, 0x95, 0x82, 0x20, 0xa2, 0x0d,
	0xcc, 0x27, 0x98, 0x2f, 0x20, 0x54, 0x2f, 0xc4, 0x9b, 0x90, 0xc6, 0xc3, 0x16, 0x6d, 0x72, 0x6a,
	0x73, 0x22, 0xec, 0xcd, 0x7c, 0x3c, 0x69, 0x5a, 0x66, 0xd5, 0x82, 0x0c, 0xbc, 0x29, 0xed, 0x39,
	0xff, 0xf7, 0x37, 0xff, 0x4f, 0xd8, 0x89, 0xac, 0x2a, 0x4e, 0xb2, 0x28, 0x81, 0x3b, 0x14, 0x8e,
	0xe4, 0x2b, 0xe4, 0xa0, 0xb0, 0x7e, 0xce, 0xaa, 0x1a, 0x09, 0xe3, 0x9d, 0xb0, 0x9b, 0x26, 0xe1,
	0x8b, 0x56, 0x15, 0x70, 0xe3, 0x4b, 0xd2, 0x42, 0x77, 0x82, 0xe9, 0xc1, 0xd7, 0xa6, 0x79, 0xb4,
	0xd3, 0xf4, 0x23, 0x62, 0xfb, 0xdf, 0xfd, 0x62, 0xce, 0x46, 0x75, 0x78, 0x4b, 0xa2, 0xb3, 0xe8,
	0x62, 0x3c, 0x3b, 0xcc, 0xd6, 0x64, 0x16, 0x74, 0xa2, 0x5d, 0xe7, 0x9d, 0x2c, 0x9e, 0xb1, 0xdd,
	0x76, 0x2e, 0x0d, 0x7a, 0x4b, 0xc9, 0x56, 0xc0, 0x26, 0x3d, 0xec, 0x1d, 0x1c, 0xe5, 0xe3, 0x20,
	0x9a, 0x07, 0x4d, 0x3c, 0x67, 0x93, 0x52, 0x3a, 0x6a, 0x7f, 0x2c, 0x48, 0x1b, 0x48, 0xb6, 0x03,
	0x76, 0xd4, 0xc3, 0x9a, 0xb1, 0xa8, 0x50, 0x5b, 0x12, 0x0e, 0x54, 0xbe, 0xd7, 0x10, 0xf7, 0x0d,
	0xf0, 0xa0, 0x0d, 0xa4, 0x77, 0xec, 0xd8, 0xa1, 0x30, 0x60, 0xfa, 0xa7, 0x17, 0xc5, 0xaa, 0x3b,
	0xde, 0xc6, 0x39, 0xd2, 0x47, 0x96, 0x0e, 0x1b, 0xf6, 0xd3, 0xfd, 0x4a, 0x1b, 0xfd, 0x9d, 0x36,
	0x7d, 0x61, 0xe7, 0xc3, 0xce, 0x3f, 0x3a, 0x18, 0xaa, 0x25, 0xda, 0xb0, 0x96, 0x9c, 0x9d, 0x3a,
	0x14, 0xde, 0xea, 0x37, 0x0f, 0xff, 0xd4, 0xcc, 0xed, 0xd5, 0xd3, 0xe5, 0x42, 0xd3, 0xd2, 0x17,
	0x99, 0x42, 0xc3, 0x15, 0x3a, 0xb5, 0x94, 0xda, 0x72, 0x85, 0x96, 0xc0, 0x12, 0xba, 0xeb, 0x05,
	0xf2, 0xf5, 0xfd, 0x2c, 0x46, 0xc1, 0xed, 0xe6, 0x33, 0x00, 0x00, 0xff, 0xff, 0x99, 0x9b, 0xb1,
	0xa4, 0xb3, 0x02, 0x00, 0x00,
}
